local util = require("util.telescope")

return {
  "nvimdev/dashboard-nvim",
  event = "VimEnter",
  enabled = true,
  opts = function()
    local logo = [[
      ‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚†Ö‚¢ó‚¢ï‚†ï‚£†‚†Ñ‚£ó‚¢ï‚¢ï‚†ï‚¢ï‚¢ï‚¢ï‚†ï‚¢†‚£ø‚†ê‚¢ï‚¢ï‚¢ï‚†ë‚¢ï‚¢ï‚†µ‚¢ï
      ‚¢ï‚¢ï‚¢ï‚¢ï‚†Å‚¢ú‚†ï‚¢Å‚£¥‚£ø‚°á‚¢ì‚¢ï‚¢µ‚¢ê‚¢ï‚¢ï‚†ï‚¢Å‚£æ‚¢ø‚£ß‚†ë‚¢ï‚¢ï‚†Ñ‚¢ë‚¢ï‚†Ö‚¢ï
      ‚¢ï‚¢ï‚†µ‚¢Å‚†î‚¢Å‚£§‚£§‚£∂‚£∂‚£∂‚°ê‚£ï‚¢Ω‚†ê‚¢ï‚†ï‚£°‚£æ‚£∂‚£∂‚£∂‚£§‚°Å‚¢ì‚¢ï‚†Ñ‚¢ë‚¢Ö‚¢ë
      ‚†ç‚£ß‚†Ñ‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£î‚¢ï‚¢Ñ‚¢°‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚°ë‚¢ï‚¢§‚†±‚¢ê
      ‚¢†‚¢ï‚†Ö‚£æ‚£ø‚†ã‚¢ø‚£ø‚£ø‚£ø‚†â‚£ø‚£ø‚£∑‚£¶‚£∂‚£Ω‚£ø‚£ø‚†à‚£ø‚£ø‚£ø‚£ø‚†è‚¢π‚£∑‚£∑‚°Ö‚¢ê
      ‚£î‚¢ï‚¢•‚¢ª‚£ø‚°Ä‚†à‚†õ‚†õ‚†Å‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ä‚†à‚†õ‚†õ‚†Å‚†Ñ‚£º‚£ø‚£ø‚°á‚¢î
      ‚¢ï‚¢ï‚¢Ω‚¢∏‚¢ü‚¢ü‚¢ñ‚¢ñ‚¢§‚£∂‚°ü‚¢ª‚£ø‚°ø‚†ª‚£ø‚£ø‚°ü‚¢Ä‚£ø‚£¶‚¢§‚¢§‚¢î‚¢û‚¢ø‚¢ø‚£ø‚†Å‚¢ï
      ‚¢ï‚¢ï‚†Ö‚£ê‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚£ø‚£ø‚°Ñ‚†õ‚¢Ä‚£¶‚†à‚†õ‚¢Å‚£º‚£ø‚¢ó‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚°è‚£ò‚¢ï
      ‚¢ï‚¢ï‚†Ö‚¢ì‚£ï‚£ï‚£ï‚£ï‚£µ‚£ø‚£ø‚£ø‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£ï‚¢ï‚¢ï‚¢ï‚¢ï‚°µ‚¢Ä‚¢ï‚¢ï
      ‚¢ë‚¢ï‚†É‚°à‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢É‚¢ï‚¢ï‚¢ï
    ]]

    logo = string.rep("\n", 2) .. logo .. "\n\n"

    local opts = {
      theme = "doom",
      hide = {
        -- this is taken care of by lualine
        -- enabling this messes up the actual laststatus setting after loading a file
        statusline = false,
      },
      config = {
        header = vim.split(logo, "\n"),
          -- stylua: ignore
          center = {
            { action = "ene",                                                      desc = " New file",        icon = "ÔÖõ ", key = "n" },
            { action = util.find_files,                                            desc = " Find file",       icon = "ÔÄÇ ", key = "f" },
            { action = "Telescope oldfiles",                                       desc = " Recent files",    icon = "ÔÉÖ ", key = "r" },
            { action = util.config_files,                                          desc = " Config",          icon = "ÔÄì ", key = "c" },
            { action = 'lua require("persistence").load()',                        desc = " Restore Session", icon = "ÔÄû ", key = "s" },
            { action = "qa",                                                       desc = " Quit",            icon = "Ôê¶ ", key = "q" },
          },
        footer = function()
          local stats = require("lazy").stats()
          local ms = (math.floor(stats.startuptime * 100 + 0.5) / 100)
          -- stylua: ignore
          return {
            "ü¶ï " .. stats.loaded .. "/" .. stats.count .. " plugins in " .. ms .. "ms",
          }
        end,
      },
    }

    for _, button in ipairs(opts.config.center) do
      button.desc = button.desc .. string.rep(" ", 43 - #button.desc)
      button.key_format = "  %s"
    end

    return opts
  end,
}
